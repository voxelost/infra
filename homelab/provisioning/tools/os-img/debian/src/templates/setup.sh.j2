#!/bin/sh

# setup authorized key for user root
mkdir -p /root/.ssh
echo '{{ public_key }}' >> /root/.ssh/authorized_keys
chown -R root:root /root/.ssh/
chmod 644 /root/.ssh/authorized_keys
chmod 700 /root/.ssh/

# setup authorized key for user {{ user.name }}
mkdir -p /home/{{ user.name }}/.ssh
echo '{{ public_key }}' >> /home/{{ user.name }}/.ssh/authorized_keys
chown -R {{ user.name }}:{{ user.name }} /home/{{ user.name }}/.ssh/
chmod 644 /home/{{ user.name }}/.ssh/authorized_keys
chmod 700 /home/{{ user.name }}/.ssh/

# allow passwordless sudo for user {{ user.name }}
mkdir -p /etc/sudoers.d
echo '{{ user.name }} ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/{{ user.name }}

usermod -aG kvm '{{ user.name }}'
usermod -aG libvirt '{{ user.name }}'

sysctl -w vm.swappiness=1
# Persist with
echo 'vm.swappiness = 1' | tee -a /etc/sysctl.d/99-sysctl-swappiness.conf
sysctl -p /etc/sysctl.d/99-sysctl-swappiness.conf

ip link add {{ network.bridge_name }} type bridge

ip link set {{ network.ethernet_interface_id }} up
ip link set {{ network.ethernet_interface_id }} master {{ network.bridge_name }}

# verify
ip link show master {{ network.bridge_name }}

# add static ip address to bridge
ip address add dev {{ network.bridge_name }} {{ network.cidr_range }}

# verify that the address was added to the interface
ip addr show {{ network.bridge_name }}

# load required kernel module
lsmod | grep macvlan || modprobe macvlan

ip link add link {{ network.ethernet_interface_id }} name {{ network.macvtap_name }} type macvtap mode bridge
ip link set {{ network.macvtap_name }} up

# start and enable the default network for libvirt
virsh net-start default
virsh net-autostart default

{{ additional_setup_steps|join("\n") }}
