apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  ports:
    - name: "web-api"
      port: 9090
      targetPort: 9090
      nodePort: 30009
  selector:
    io.kompose.service: prometheus
  type: NodePort
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: prometheus
  annotations:
    configmap.reloader.stakater.com/reload: "prometheus-config"
    secret.reloader.stakater.com/reload: "jellyfin-api-token"
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: prometheus
    spec:
      containers:
        - name: prometheus
          image: bitnami/prometheus:2.47.0-debian-11-r26
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9090
          resources:
            limits:
              cpu: 0.5
              memory: 1Gi
          volumeMounts:
            - name: prometheus-cache
              mountPath: /opt/bitname/prometheus/data
            - name: prometheus-config
              mountPath: /opt/bitnami/prometheus/conf
              # readOnly: true
      volumes:
        - name: prometheus-cache
          persistentVolumeClaim:
            claimName: prometheus-cache
        - name: prometheus-config
          configMap:
            name: prometheus-config
      restartPolicy: Always
status: {}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    scrape_configs:
      - job_name: jellyfin
        static_configs:
          - targets:
            - jellyfin-exporter:8080
